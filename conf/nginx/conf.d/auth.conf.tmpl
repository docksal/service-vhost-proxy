{{ if and (getenv "NGO_CALLBACK_HOST") (getenv "NGO_CLIENT_ID") (getenv "NGO_CLIENT_SECRET") (getenv "NGO_TOKEN_SECRET") }}
# Enable oauth

server {
    listen 80;
    listen 443 ssl http2;
    server_name auth;
    server_name auth.*;
    ssl_certificate /etc/certs/server.crt;
    ssl_certificate_key /etc/certs/server.key;
    ssl_session_cache builtin:1000 shared:SSL:10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    lua_ssl_verify_depth        5;

    set $ngo_callback_uri       '/_oauth';
    set $ngo_callback_host      '{{ getenv "NGO_CALLBACK_HOST" }}';
    set $ngo_client_id          '{{ getenv "NGO_CLIENT_ID" }}';
    set $ngo_client_secret      '{{ getenv "NGO_CLIENT_SECRET" }}';
    set $ngo_token_secret       '{{ getenv "NGO_TOKEN_SECRET" }}';
    set $ngo_user               'unknown';
    set $ngo_email_as_user      'true';
    set $ngo_extra_validity     '0';
    set_by_lua $ngo_domain      'return os.getenv("NGO_DOMAIN")';
    set_by_lua $ngo_whitelist   'return os.getenv("NGO_WHITELIST")';
    set_by_lua $ngo_blacklist   'return os.getenv("NGO_BLACKLIST")';

    expires 0;

    add_header Google-User $ngo_user;

    location / {
	# See https://github.com/openresty/lua-nginx-module#ngxeof
	proxy_ignore_client_abort on;
	access_by_lua_file "/etc/nginx/lua/access.lua";
    }
}
{{ end }}
